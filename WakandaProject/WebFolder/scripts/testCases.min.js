"use strict";(({define:typeof define=="function"?define:function(a,b){var c=b.apply(null,a.map(require));Object.keys(c).forEach(function(a){exports[a]=c[a]})}})).define(["money"],function(a){var b,c,d={};return b=function(b,c){return Math.abs(b-c)<1e-6},c=function(){return{symbol:"%",negativeFormat:a.NEGATIVE_FORMATS.PARENTHESES,symbolPosition:a.SYMBOL_POSITIONS.AFTER,thousandsSeparator:".",decimalSeparator:","}},d.get=function(){var e={name:"money Tests","test abs":function(){Y.Assert.isTrue(b(a.make(-21.67).abs().getValue(),21.67),"absolute value of a negative money amount"),Y.Assert.isTrue(b(a.make(21.67).abs().getValue(),21.67),"absolute value of a positive money amount"),Y.Assert.areSame(a.make(0).abs().getValue(),0,"absolute value of a 0 money amount")},"test dividedBy":function(){Y.Assert.isTrue(b(a.make(21.67).dividedBy(5).getValue(),4.33),"divide a money value by a number"),Y.Assert.isTrue(b(a.make(21.67).dividedBy(a.make(5)),4.334),"divide a money value by a money value")},"test getValue":function(){Y.Assert.isTrue(b(a.make(13.08).getValue(),13.08),"get a money value"),Y.Assert.isTrue(b(a.make(13.084444).getValue(),13.08),"get a money value from a number that was rounded down"),Y.Assert.isTrue(b(a.make(13.085).getValue(),13.09),"get a money value from a number that was rounded up")},"test isEqualTo":function(){Y.Assert.isFalse(a.make(21.67).isEqualTo(a.make(21.68)),"check for equality for values that are not equal"),Y.Assert.isTrue(a.make(21.67).isEqualTo(21.67),"check for equality for values that are equal"),Y.Assert.isTrue(a.make(21.67).plus(a.make(14.59)).times(17).minus(a.make(11.21)).isEqualTo(a.make(605.21)),"check for equality for calculated values that are equal"),Y.Assert.isFalse(a.make(34.67).times(403).plus(a.make(107.61)).isEqualTo(a.make(14079.61)),"check for equality for calculated values that are not equal by 1 cent too little"),Y.Assert.isFalse(a.make(34.67).times(403).plus(a.make(107.61)).isEqualTo(a.make(14079.63)),"check for equality for calculated values that are not equal by 1 cent too much")},"test isGreaterThan":function(){Y.Assert.isFalse(a.make(21.67).isGreaterThan(a.make(21.67)),"check values that are equal"),Y.Assert.isTrue(a.make(21.67).isGreaterThan(21.66),"check value is greater than"),Y.Assert.isFalse(a.make(21.67).isGreaterThan(a.make(21.68)),"check value is less than")},"test isGreaterThanOrEqualTo":function(){Y.Assert.isTrue(a.make(21.67).isGreaterThanOrEqualTo(a.make(21.67)),"check values that are equal"),Y.Assert.isTrue(a.make(21.67).isGreaterThanOrEqualTo(21.66),"check value is greater than"),Y.Assert.isFalse(a.make(21.67).isGreaterThanOrEqualTo(a.make(21.68)),"check value is less than")},"test isLessThan":function(){Y.Assert.isFalse(a.make(21.67).isLessThan(a.make(21.67)),"check values that are equal"),Y.Assert.isFalse(a.make(21.67).isLessThan(21.66),"check value is greater than"),Y.Assert.isTrue(a.make(21.67).isLessThan(a.make(21.68)),"check value is less than")},"test isLessThanOrEqualTo":function(){Y.Assert.isTrue(a.make(21.67).isLessThanOrEqualTo(a.make(21.67)),"check values that are equal"),Y.Assert.isFalse(a.make(21.67).isLessThanOrEqualTo(21.66),"check value is greater than"),Y.Assert.isTrue(a.make(21.67).isLessThanOrEqualTo(a.make(21.68)),"check value is less than")},"test minus":function(){Y.Assert.isTrue(b(a.make(21.67).minus(13.08).getValue(),8.59),"subtract a number from a money value"),Y.Assert.isTrue(b(a.make(21.67).minus(a.make(13.08)).getValue(),8.59),"subtract a money value from a money value")},"test plus":function(){Y.Assert.isTrue(b(a.make(21.67).plus(13.08).getValue(),34.75),"add a money value to a number"),Y.Assert.isTrue(b(a.make(21.67).plus(a.make(13.08)).getValue(),34.75),"add 2 money values")},"test setValue":function(){Y.Assert.isTrue(b(a.make().setValue(13.08).getValue(),13.08),"set a money value to a number"),Y.Assert.isTrue(b(a.make().setValue(13.084444).getValue(),13.08),"set a money value to a number that is rounded down"),Y.Assert.isTrue(b(a.make().setValue(13.085).getValue(),13.09),"set a money value to a number that is rounded up"),Y.Assert.isTrue(b(a.make().setValue(a.make(45.67)).getValue(),45.67),"set a money value to another money value")},"test sum":function(){Y.Assert.isTrue(b(a.sum([12.45,a.make(16.28),.45,101.23,a.make(12.34),67.38]).getValue(),210.13),"sum an array of money values and numbers"),Y.Assert.isTrue(b(a.sum([12.45,a.make(-16.28),.45,101.23,a.make(12.34),-67.38]).getValue(),42.81),"sum an array of money values and numbers with negatives")},"test times":function(){Y.Assert.isTrue(b(a.make(21.67).times(13.78394).getValue(),298.7),"multiply a money value by a number with a fraction")},"test toString":function(){Y.Assert.areSame(a.make(1822456.34).toString(),"$1,822,456.34","using all defaults"),Y.Assert.areSame(a.make(-1822456.34).toString(),"-$1,822,456.34","using all defaults with a negative value"),Y.Assert.areSame(a.make(0).toString(),"$0.00","using all defaults with a value of 0"),Y.Assert.areSame(a.make(1822456.34).toString("€"),"€1,822,456.34","specifying a currency symbol"),Y.Assert.areSame(a.make(1822456.34).toString(""),"1,822,456.34","specifying no currency symbol"),Y.Assert.areSame(a.make(1822456.34).toString(a.defaults.currencySymbol(),a.NEGATIVE_FORMATS.PARENTHESES),"$1,822,456.34","parentheses for negative amounts with a positive amount"),Y.Assert.areSame(a.make(-1822456.34).toString(a.defaults.currencySymbol(),a.NEGATIVE_FORMATS.PARENTHESES),"$(1,822,456.34)","parentheses for negative amounts with a negative amount"),Y.Assert.areSame(a.make(0).toString(a.defaults.currencySymbol(),a.NEGATIVE_FORMATS.PARENTHESES),"$0.00","parentheses for negative amounts with a zero amount"),Y.Assert.areSame(a.make(2387).toString(a.defaults.currencySymbol(),a.defaults.negativeFormat(),a.SYMBOL_POSITIONS.BEFORE),"$2,387.00","symbol at front"),Y.Assert.areSame(a.make(2387).toString(a.defaults.currencySymbol(),a.defaults.negativeFormat(),a.SYMBOL_POSITIONS.AFTER),"2,387.00$","symbol at rear"),Y.Assert.areSame(a.make(2387).toString(a.defaults.currencySymbol(),a.defaults.negativeFormat(),a.defaults.symbolPosition()," "),"$2 387.00","thousands separator"),Y.Assert.areSame(a.make(2387).toString(a.defaults.currencySymbol(),a.defaults.negativeFormat(),a.defaults.symbolPosition(),a.defaults.thousandsSeparator()," - "),"$2,387 - 00","decimal separator"),a.setFormatFunction(c),Y.Assert.areSame(a.make(-2387).toString(),"(2.387,00)%","getFormat function"),a.setFormatFunction(undefined),a.setFormatFunction(c),Y.Assert.areSame(a.make(-2387).toString(""),"(2.387,00)","override getFormat function symbol"),a.setFormatFunction(undefined),a.setFormatFunction(c),Y.Assert.areSame(a.make(-2387).toString(undefined,a.NEGATIVE_FORMATS.MINUS_SIGN),"-2.387,00%","override getFormat function negative format"),a.setFormatFunction(undefined),a.defaults.currencySymbol("€"),a.defaults.symbolPosition(a.SYMBOL_POSITIONS.AFTER),a.defaults.decimalSeparator(","),a.defaults.thousandsSeparator("."),a.defaults.negativeFormat(a.NEGATIVE_FORMATS.PARENTHESES),Y.Assert.areSame(a.make(-2387).toString(),"(2.387,00)€","default settings"),a.defaults.currencySymbol("¥"),a.defaults.symbolPosition(a.SYMBOL_POSITIONS.BEFORE),a.defaults.decimalSeparator("."),a.defaults.thousandsSeparator(","),a.defaults.negativeFormat(a.NEGATIVE_FORMATS.MINUS_SIGN),Y.Assert.areSame(a.make(-2387).toString(a.defaults.currencySymbol(),a.defaults.negativeFormat(),a.defaults.symbolPosition(),a.defaults.thousandsSeparator(),a.defaults.decimalSeparator()),"-¥2,387.00","all default settings passed in")}};return e},d})